#!/usr/bin/env php
<?php
if (!defined('STDIN') and empty($_SERVER['TERM'])) {
  die('This script is meant for running from the shell.');
}

require_once dirname(__FILE__).'/deploki.php';
Deploki::prepareEnvironment();

$arrays = array();
foreach ((array) new DeplokiConfig as $option => $value) {
  is_array($value) and $arrays[] = $option;
}

array_shift($argv);   // the name of script being ran by PHP.
reset($argv) === '--' and array_shift($argv);   // leftover of "php f.php -- ...'
extract(Deploki::parseCL($argv, $arrays));

$config = $index ? $index[0] : getcwd();
$config = DeplokiConfig::loadFrom(DeplokiConfig::locate($config));

if (isset($flags['s']) and isset($flags['d'])) {
  die('Flags -s and -d conflict with each other.');
}

isset($flags['s']) and $options += array('debug' => false);
isset($flags['d']) and $options += array('debug' => true);
isset($flags['f']) and $config->perFilter['omitold']->condition = false;
isset($flags['y']) and error_reporting(error_reporting() & ~E_USER_WARNING);

foreach ($options as $option => $value) {
  if (strrchr($option, '-') !== false) {
    $option = preg_replace('/-(\w)/e', 'strtoupper("\\1")', $option);
  } elseif (!$config->has($option) and $config->has($option.'Path')) {
    $option .= 'Path';
  }

  $config->$option = is_array($value) ? ($value + $config->$option) : $value;
}

function dkiConsoleLogger($msg, $filter = null) {
  global $commonPath;

  if ($filter instanceof DeplokiConfig) {
    $config = $filter;
  } elseif ($filter->config instanceof DeplokiConfig) {
    $config = $filter->config;
  } else {
    $config = new stdClass;
  }

  if ($filter instanceof DeplokiFilter) {
    $msg = strtoupper($filter->name).': '.$msg;
  } elseif ($filter instanceof DeplokiBatch) {
    echo PHP_EOL, '  ';
    $msg = is_numeric($msg) ? "#$msg" : "- $msg -";
  }

  $msgTR = array(" $commonPath/" => ' ');
  $url = dkiPath($config->urls['outPath']) and $msgTR[" $url/"] = ' @/';

  echo str_repeat('  ', $config->nestingLevel),
       trim(strtr(" $msg", $msgTR)), PHP_EOL;
}

global $commonPath;
$in = explode('/', dkiPath($config->inPath));
$out = explode('/', dkiPath($config->outPath));

for ($i = min(count($in), count($out)); $i > 0; --$i) {
  if (array_slice($in, 0, $i) === array_slice($out, 0, $i)) {
    $commonPath = join('/', array_slice($in, 0, $i));
    break;
  }
}

$config->logger = 'dkiConsoleLogger';

echo "Deploying from [{$config->inPath}]...", PHP_EOL;

$deploki = new Deploki($config);
isset($flags['b']) and debugBreak();
$deploki->deploy($config->pages);

echo PHP_EOL, "Deployed to [{$config->outPath}].";
